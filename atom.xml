<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cwza&#39;s blog</title>
  
  <link href="/my_blog/atom.xml" rel="self"/>
  
  <link href="http://cwza.github.io/my_blog/"/>
  <updated>2017-03-31T03:45:09.000Z</updated>
  <id>http://cwza.github.io/my_blog/</id>
  
  <author>
    <name>Cwza</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>go test tool筆記</title>
    <link href="http://cwza.github.io/my_blog/2017/03/31/go_test_tool%E7%AD%86%E8%A8%98/"/>
    <id>http://cwza.github.io/my_blog/2017/03/31/go_test_tool筆記/</id>
    <published>2017-03-31T03:38:57.000Z</published>
    <updated>2017-03-31T03:45:09.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="run-all-test-except-vendor"><a href="#run-all-test-except-vendor" class="headerlink" title="run all test except vendor"></a>run all test except vendor</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">go <span class="built_in">test</span> $(go list ./... | grep -v /vendor/)</div></pre></td></tr></table></figure>
<h2 id="go-tool-cover"><a href="#go-tool-cover" class="headerlink" title="go tool cover"></a>go tool cover</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">go <span class="built_in">test</span> -coverprofile coverage.txt &lt;package name&gt;</div><div class="line">go tool cover -html=coverage.txt -o coverage.html</div><div class="line">chrome coverage.html</div></pre></td></tr></table></figure>
<h2 id="example-script-to-run-all-package-test-and-generate-coverage-file"><a href="#example-script-to-run-all-package-test-and-generate-coverage-file" class="headerlink" title="example script to run all package test and generate coverage file"></a>example script to run all package test and generate coverage file</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/usr/bin/env bash</span></div><div class="line"></div><div class="line"><span class="built_in">set</span> <span class="_">-e</span></div><div class="line">out=<span class="string">"coverage.txt"</span></div><div class="line">tmp=<span class="string">"profile.coverage.out"</span></div><div class="line">except=<span class="string">"example|testproto"</span></div><div class="line"></div><div class="line">: &gt; <span class="variable">$out</span></div><div class="line"></div><div class="line">i=0</div><div class="line"><span class="keyword">for</span> d <span class="keyword">in</span> $(go list ./... | grep -v vendor); <span class="keyword">do</span></div><div class="line">    <span class="comment"># except some package</span></div><div class="line">    <span class="keyword">if</span> [[ <span class="variable">$d</span> =~ <span class="variable">$except</span> ]]; <span class="keyword">then</span></div><div class="line">        <span class="built_in">continue</span></div><div class="line">    <span class="keyword">fi</span></div><div class="line">    </div><div class="line">    <span class="built_in">echo</span> <span class="_">-e</span> <span class="string">"TESTS FOR: for \033[0;35m<span class="variable">$&#123;d&#125;</span>\033[0m"</span></div><div class="line">    go <span class="built_in">test</span> -v -coverprofile=<span class="variable">$tmp</span> <span class="variable">$d</span></div><div class="line">    <span class="keyword">if</span> [ <span class="_">-f</span> <span class="variable">$tmp</span> ]; <span class="keyword">then</span></div><div class="line">        <span class="comment"># remove mode:xxx if not first package for go tool cover</span></div><div class="line">        <span class="keyword">if</span> [ <span class="string">"<span class="variable">$i</span>"</span> != 0 ]; <span class="keyword">then</span></div><div class="line">            sed -i <span class="string">''</span> <span class="_">-e</span> <span class="string">'/^mode:/d'</span> ./<span class="variable">$tmp</span></div><div class="line">        <span class="keyword">fi</span></div><div class="line">        cat <span class="variable">$tmp</span> &gt;&gt; <span class="variable">$out</span></div><div class="line">        rm <span class="variable">$tmp</span></div><div class="line">    <span class="keyword">fi</span></div><div class="line">    <span class="built_in">echo</span> <span class="string">""</span></div><div class="line">    ((i++))</div><div class="line"><span class="keyword">done</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;run-all-test-except-vendor&quot;&gt;&lt;a href=&quot;#run-all-test-except-vendor&quot; class=&quot;headerlink&quot; title=&quot;run all test except vendor&quot;&gt;&lt;/a&gt;run all 
    
    </summary>
    
      <category term="golang" scheme="http://cwza.github.io/my_blog/categories/golang/"/>
    
    
      <category term="golang" scheme="http://cwza.github.io/my_blog/tags/golang/"/>
    
      <category term="test" scheme="http://cwza.github.io/my_blog/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>golang test 筆記</title>
    <link href="http://cwza.github.io/my_blog/2017/03/16/golang-test%E7%AD%86%E8%A8%98/"/>
    <id>http://cwza.github.io/my_blog/2017/03/16/golang-test筆記/</id>
    <published>2017-03-16T10:00:57.000Z</published>
    <updated>2017-03-17T05:30:59.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Table-Driven-Test"><a href="#Table-Driven-Test" class="headerlink" title="Table Driven Test"></a>Table Driven Test</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestAdd</span><span class="params">(t * testing.T)</span></span> &#123;</div><div class="line">  <span class="keyword">case</span> := <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">struct</span>&#123; A, B, Expected <span class="keyword">int</span>&#125; &#123;</div><div class="line">    <span class="string">"foo"</span>: &#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>&#125;,</div><div class="line">    <span class="string">"bar"</span>: &#123;<span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>&#125;,</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">for</span> k, tc := <span class="keyword">range</span> cases &#123;</div><div class="line">    actual := tc.A + tc.B</div><div class="line">    <span class="keyword">if</span> actual != expected &#123;</div><div class="line">      t.Errorf(</div><div class="line">        <span class="string">"%s %d + %d = %d, exected %d"</span>,</div><div class="line">        k, tc.A, tc.B, actual, tc.Expected)</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Test-fixtures"><a href="#Test-fixtures" class="headerlink" title="Test fixtures"></a>Test fixtures</h2><p>go test set pwd as package directory<br>use relative path “test-fixtures” directory as a place to store test data(loading config, model data, binary data …etc)<br><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestAdd</span><span class="params">(t *testing.T)</span></span> &#123;</div><div class="line">  data := filepath.Join(<span class="string">"test-fixtures"</span>, <span class="string">"daa_data.json"</span>)</div><div class="line">  <span class="comment">// Do something with data</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="Golden-files-Test-flag"><a href="#Golden-files-Test-flag" class="headerlink" title="Golden files(Test flag)"></a>Golden files(Test flag)</h2><p>expected output放在.golden file中<br>當update flag為true時, 代表需要更新expected output file<br>Very useful to test complex structures<br><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> update = flag.Bool(<span class="string">"update"</span>, <span class="literal">false</span>, <span class="string">"update golden files"</span>)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestAdd</span><span class="params">(t *testing.T)</span></span> &#123;</div><div class="line">  actual := doSomething(tc)</div><div class="line">  golden := filepath.Join(<span class="string">"test-fixtures"</span>, tc.Name+<span class="string">".golden"</span>)</div><div class="line">  <span class="keyword">if</span> *update &#123;</div><div class="line">    ioUtil.WriteFile(golden, actual, <span class="number">0644</span>)</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  expected, _ := ioutil.ReadFile(golden)</div><div class="line">  <span class="keyword">if</span> !bytes.Equal(actual, expected) &#123;</div><div class="line">    <span class="comment">//FAIL!</span></div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">go <span class="built_in">test</span></div><div class="line">go <span class="built_in">test</span> -update</div></pre></td></tr></table></figure>
<h2 id="Global-State"><a href="#Global-State" class="headerlink" title="Global State"></a>Global State</h2><p>Do not use global state.<br>If you have to do, Use default, and let test can easily mock it.<br><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> defaultPort = <span class="number">1000</span></div><div class="line"></div><div class="line"><span class="keyword">type</span> ServerOpts &#123;</div><div class="line">  Port <span class="keyword">int</span> <span class="comment">// default it to defaultPort somewhere</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="Test-Helpers"><a href="#Test-Helpers" class="headerlink" title="Test Helpers"></a>Test Helpers</h2><h3 id="TestTempFile"><a href="#TestTempFile" class="headerlink" title="TestTempFile"></a>TestTempFile</h3><p>Test helper接受testing.T參數, helper中的錯誤直接在helper中處理掉<br>helper return a function to clean<br><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">testTempFile</span><span class="params">(t * testing.T)</span> <span class="params">(<span class="keyword">string</span>, <span class="keyword">func</span>()</span>)</span> &#123;</div><div class="line">  tf, err := iotuil.TempFile(<span class="string">""</span>, <span class="string">"test"</span>)</div><div class="line">  <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</div><div class="line">    t.Fatalf(<span class="string">"err: %s"</span>, err)</div><div class="line">  &#125;</div><div class="line">  tf.Close()</div><div class="line">  <span class="keyword">return</span> tf.Name(), <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123; os.Remove(tf.Name()) &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestThing</span><span class="params">(t *testing T)</span></span> &#123;</div><div class="line">  tf, tfclose := testTempFile(t)</div><div class="line">  <span class="keyword">defer</span> tfclose()</div><div class="line">  <span class="comment">// doSomething with tf</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="TestChdir"><a href="#TestChdir" class="headerlink" title="TestChdir"></a>TestChdir</h3><p>切換dir並在function結束前切換回來<br>注意testChdir會回傳一function, 該function會將dir切回原本old<br>由於defer會在defer當下處理完參數所以在defer當下即會切換到dir<br>然後在TestThing結束前呼叫os.chdir(old)<br><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">testChdir</span><span class="params">(t *testing.T, dir <span class="keyword">string</span>)</span> <span class="title">func</span><span class="params">()</span></span> &#123;</div><div class="line">  old, err := os.Getwd()</div><div class="line">  <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</div><div class="line">    t.Fatalf(<span class="string">"err: %s"</span>, err)</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">if</span> err := os.Chdir(dir); err != <span class="literal">nil</span> &#123;</div><div class="line">    t.Fatalf(<span class="string">"err: %s"</span>, err)</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123; os.Chdir(old) &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestThing</span><span class="params">(t *testing.T)</span></span> &#123;</div><div class="line">  <span class="keyword">defer</span> testChdir(t, <span class="string">"/other"</span>)()</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="Networking"><a href="#Networking" class="headerlink" title="Networking"></a>Networking</h2><p>不需要mock net.Conn<br><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestConn</span><span class="params">(t *testing.T)</span> <span class="params">(client, server net.Conn)</span></span> &#123;</div><div class="line">  ln, err := net.Listen(<span class="string">"tcp"</span>, <span class="string">"127.0.0.1:0"</span>)</div><div class="line"></div><div class="line">  <span class="keyword">var</span> server net.Conn</div><div class="line">  <span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</div><div class="line">    <span class="keyword">defer</span> ln.Close()</div><div class="line">    server, err = ln.Acccept()</div><div class="line">  &#125;()</div><div class="line"></div><div class="line">  client, err := net.Dial(<span class="string">"tcp"</span>, ln.Addr().String())</div><div class="line">  <span class="keyword">return</span> client, server</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="Test-Subprocessing"><a href="#Test-Subprocessing" class="headerlink" title="Test Subprocessing"></a>Test Subprocessing</h2><p>Check if git is installed. If not, skip test<br><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> testHasGit <span class="keyword">bool</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</div><div class="line">  <span class="keyword">if</span> _, err := exec.LookPath(<span class="string">"git"</span>); err == <span class="literal">nil</span> &#123;</div><div class="line">    testHasGit = <span class="literal">true</span></div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestGitGetter</span><span class="params">(t *testing.T)</span></span> &#123;</div><div class="line">  <span class="keyword">if</span> !testHasGit &#123;</div><div class="line">    t.Log(<span class="string">"git not found, skipping"</span>)</div><div class="line">    t.Skip()</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="Testing-as-a-public-API"><a href="#Testing-as-a-public-API" class="headerlink" title="Testing as a public API"></a>Testing as a public API</h2><p>提供使用你的package的user一個測試你的package的public API(Maybe a mock or a helper)<br><em><em>test.go will be ignored by go, so use testing</em></em>.go for Test for API<br>Example:</p>
<ul>
<li>API Server<ul>
<li>TestServer(t) (net.Addr, io.Closer) =&gt; Returns a fully started in-memory server and a closer to close it.</li>
</ul>
</li>
<li>interface for downloading files<ul>
<li>TestDownloader(t, Downloader) =&gt; Tests all the properties a downloader should have.</li>
<li>struct DownloaderMock[] =&gt; Implements Downloader as a mock</li>
</ul>
</li>
</ul>
<h2 id="Timing-Dependent-Test"><a href="#Timing-Dependent-Test" class="headerlink" title="Timing-Dependent Test"></a>Timing-Dependent Test</h2><p>timeMultiplier is configurable.<br>maybe lower at laptop and higher at server<br><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestThing</span><span class="params">(t * testing.T)</span></span> &#123;</div><div class="line">  timeout := <span class="number">3</span> * time.Minute * timeMultiplier</div><div class="line"></div><div class="line">  <span class="keyword">select</span> &#123;</div><div class="line">  <span class="keyword">case</span> &lt;- thingHappened:</div><div class="line">  <span class="keyword">case</span> &lt;- time.After(timeout):</div><div class="line">    t.Fatal(<span class="string">"timeout"</span>)</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Table-Driven-Test&quot;&gt;&lt;a href=&quot;#Table-Driven-Test&quot; class=&quot;headerlink&quot; title=&quot;Table Driven Test&quot;&gt;&lt;/a&gt;Table Driven Test&lt;/h1&gt;&lt;figure class
    
    </summary>
    
      <category term="golang" scheme="http://cwza.github.io/my_blog/categories/golang/"/>
    
    
      <category term="golang" scheme="http://cwza.github.io/my_blog/tags/golang/"/>
    
      <category term="test" scheme="http://cwza.github.io/my_blog/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>golang筆記</title>
    <link href="http://cwza.github.io/my_blog/2017/03/16/golang%E7%AD%86%E8%A8%98/"/>
    <id>http://cwza.github.io/my_blog/2017/03/16/golang筆記/</id>
    <published>2017-03-16T02:30:57.000Z</published>
    <updated>2017-03-16T07:32:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>reference from: <a href="http://blog.wuxu92.com/" target="_blank" rel="external">http://blog.wuxu92.com/</a></p>
<!-- toc -->
<a id="more"></a>
<h2 id="不定參數"><a href="#不定參數" class="headerlink" title="不定參數"></a>不定參數</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">sum</span> <span class="params">(nums ...<span class="keyword">int</span>)</span></span>&#123;</div><div class="line">	total := <span class="number">0</span></div><div class="line">	<span class="keyword">for</span> _, num := <span class="keyword">range</span> nums &#123;</div><div class="line">		total += num</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> total</div><div class="line">&#125;</div><div class="line">nums := []<span class="keyword">int</span>&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;</div><div class="line">t := sum(nums...)</div></pre></td></tr></table></figure>
<h2 id="closure"><a href="#closure" class="headerlink" title="closure"></a>closure</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">intSeq</span><span class="params">()</span> <span class="title">func</span><span class="params">()</span> <span class="title">int</span></span> &#123;</div><div class="line">	i := <span class="number">0</span></div><div class="line">	<span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">()</span> <span class="title">int</span></span> &#123;</div><div class="line">		i += <span class="number">1</span>;</div><div class="line">		<span class="keyword">return</span> i</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">next := intSeq()</div><div class="line"><span class="comment">// next是一个命名函数了</span></div><div class="line">next()</div></pre></td></tr></table></figure>
<h2 id="Error-handle"><a href="#Error-handle" class="headerlink" title="Error handle"></a>Error handle</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> myErr <span class="keyword">struct</span> &#123;</div><div class="line">	arg <span class="keyword">int</span></div><div class="line">	prob <span class="keyword">string</span></div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">func</span> <span class="params">(e myErr)</span> <span class="title">Error</span><span class="params">()</span> <span class="title">string</span></span> &#123;</div><div class="line">  <span class="keyword">return</span> fmt.Sprintf(<span class="string">"%d - %s"</span>, e.arg, e.prob)</div><div class="line">&#125;</div><div class="line"><span class="keyword">type</span> Person <span class="keyword">struct</span>&#123;</div><div class="line">	age <span class="keyword">int</span></div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p Person)</span><span class="title">buy</span><span class="params">(item <span class="keyword">string</span>)</span> <span class="params">(<span class="keyword">bool</span>, error)</span></span> &#123;</div><div class="line">  <span class="keyword">if</span> p.age &lt; <span class="number">18</span> &#123;</div><div class="line">    <span class="keyword">return</span> <span class="literal">false</span>, &amp;myErr&#123;<span class="number">0</span>, <span class="string">"too yong"</span>&#125;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> <span class="literal">true</span>, <span class="literal">nil</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">me := Person&#123;<span class="number">10</span>&#125;</div><div class="line">, e := me.buy(<span class="string">"shirt"</span>)</div><div class="line"><span class="keyword">if</span> me, ok := e.(*myErr); ok &#123;</div><div class="line">	<span class="comment">// with myErr return, me ref to return error</span></div><div class="line">	...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="channel"><a href="#channel" class="headerlink" title="channel"></a>channel</h2><p>channel預設是blocking的<br>channel中沒東西recieve的話會block, 若已沒有其他goroutine則會panic</p>
<h3 id="使用channel同步goroutine"><a href="#使用channel同步goroutine" class="headerlink" title="使用channel同步goroutine"></a>使用channel同步goroutine</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">working</span><span class="params">(flagChan <span class="keyword">chan</span> <span class="keyword">bool</span>)</span></span> &#123;</div><div class="line">  fmt.Println(<span class="string">"working on it"</span>)</div><div class="line">  time.Sleep(<span class="number">2</span> * time.Second)</div><div class="line">  fmt.Println(<span class="string">"work done"</span>)            </div><div class="line"></div><div class="line">  flagChan &lt;- <span class="literal">true</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">chanSync</span><span class="params">()</span></span> &#123;</div><div class="line">  flagChan := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">bool</span>, <span class="number">1</span>)</div><div class="line">  <span class="keyword">go</span> working(flagChan)</div><div class="line"></div><div class="line">  <span class="comment">// 下面的接受操作会阻塞等待goroutine执行结束</span></div><div class="line">  done := &lt;- flagChan </div><div class="line">  fmt.Println(<span class="string">"sync goroutine output"</span>, done)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="channel-directive"><a href="#channel-directive" class="headerlink" title="channel directive"></a>channel directive</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">send</span> <span class="params">(flagChan <span class="keyword">chan</span>&lt;- <span class="keyword">bool</span>)</span></span> &#123; ... &#125;</div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">recv</span> <span class="params">(flagChan &lt;-<span class="keyword">chan</span> <span class="keyword">bool</span>)</span></span> &#123; ... &#125;</div></pre></td></tr></table></figure>
<h3 id="select"><a href="#select" class="headerlink" title="select"></a>select</h3><p>select用於從多個channel中輪訓狀態, 從已經準備就緒的channel中接受值並執行相對應代碼<br><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> (</div><div class="line">	<span class="string">"math/rand"</span></div><div class="line">	<span class="string">"time"</span></div><div class="line">	<span class="string">"strconv"</span></div><div class="line">)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">gr1</span><span class="params">(c <span class="keyword">chan</span> <span class="keyword">string</span>)</span></span> &#123;</div><div class="line">  dur := rand.Intn(<span class="number">300</span>)</div><div class="line">  time.Sleep(time.Millisecond * time.Duration(dur))</div><div class="line">  c &lt;- <span class="string">"gr1 sleep done "</span> + strconv.Itoa(dur)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">gr2</span><span class="params">(c <span class="keyword">chan</span> <span class="keyword">string</span>)</span></span> &#123;</div><div class="line">  dur := rand.Intn(<span class="number">400</span>)</div><div class="line">  time.Sleep(time.Millisecond * time.Duration(dur))</div><div class="line">  c &lt;- <span class="string">"gr2 sleep done "</span> + strconv.Itoa(dur)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">selects</span><span class="params">()</span></span> &#123;</div><div class="line">  c1 := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">string</span>)</div><div class="line">  c2 := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">string</span>)</div><div class="line">  <span class="keyword">go</span> gr1(c1)</div><div class="line">  <span class="keyword">go</span> gr1(c1)</div><div class="line">  <span class="keyword">go</span> gr2(c2)</div><div class="line">  <span class="keyword">go</span> gr2(c2)</div><div class="line"></div><div class="line">  <span class="keyword">for</span> i:=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++ &#123;</div><div class="line">    <span class="keyword">select</span> &#123;</div><div class="line">    <span class="keyword">case</span> msg := &lt;-c1:</div><div class="line">      fmt.Println(msg)</div><div class="line">    <span class="keyword">case</span> msg2 := &lt;-c2:</div><div class="line">      fmt.Println(msg2)</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="超時"><a href="#超時" class="headerlink" title="超時"></a>超時</h3><p>若等待超過一定時間沒有resource則執行<br><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> &#123;</div><div class="line"><span class="keyword">case</span> res &lt;- c1 :</div><div class="line">	fmt.Println(res)</div><div class="line"><span class="keyword">case</span> &lt;-time.After(time.Seconde * <span class="number">2</span>)</div><div class="line">	fmt.Println(<span class="string">"timeout"</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="non-blocking-channel"><a href="#non-blocking-channel" class="headerlink" title="non-blocking channel"></a>non-blocking channel</h3><p>所有case的channel都没有就绪的时候执行default<br><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> &#123;</div><div class="line"><span class="keyword">case</span> msg := &lt;-c1:</div><div class="line">  fmt.Println(msg)</div><div class="line"><span class="keyword">case</span> msg2 := &lt;-c2:</div><div class="line">  fmt.Println(msg2)</div><div class="line"><span class="keyword">default</span>:</div><div class="line">  <span class="comment">// non-blocking channel</span></div><div class="line">  fmt.Println(<span class="string">"select default"</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="range-over-channel"><a href="#range-over-channel" class="headerlink" title="range over channel"></a>range over channel</h3><p>对于一个close了得channel，range能自动判断是否遍历结束，但是如果channel没有调用过close，在下面的代码中，会在接受第三个值的时候阻塞(异常退出)<br><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">rangeChannel</span><span class="params">()</span></span> &#123;</div><div class="line">  c := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">string</span>, <span class="number">2</span>)</div><div class="line">  c &lt;- <span class="string">"tomorrow is monday"</span></div><div class="line">  c &lt;- <span class="string">"fee out"</span></div><div class="line">  <span class="built_in">close</span>(c)</div><div class="line">  <span class="keyword">for</span> str := <span class="keyword">range</span> c &#123;</div><div class="line">    fmt.Println(str)</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="Timer-amp-Ticker"><a href="#Timer-amp-Ticker" class="headerlink" title="Timer &amp; Ticker"></a>Timer &amp; Ticker</h2><h3 id="Timer"><a href="#Timer" class="headerlink" title="Timer"></a>Timer</h3><p>timer is like a channel<br><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> <span class="string">"time"</span></div><div class="line">...</div><div class="line"><span class="comment">// 定义一个timer，超时设定2秒</span></div><div class="line">timer1 := time.NewTimer(time.Second *２）</div><div class="line"><span class="comment">// 在此等待2s</span></div><div class="line">&lt;- timer1.C  <span class="comment">//注意.C</span></div></pre></td></tr></table></figure></p>
<h3 id="Tickers"><a href="#Tickers" class="headerlink" title="Tickers"></a>Tickers</h3><p>ticker就像打点器一样循环执行某代码<br>ticker看作一个channel，在初始化时定义一个循环时间，每过一段时间往channel里面塞一个数，然后我们循环去取<br><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">t1 := time.NewTicker(time.Millisecond * <span class="number">500</span>)</div><div class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</div><div class="line">	<span class="keyword">for</span> t := <span class="keyword">range</span> t1.C &#123;</div><div class="line">		fmt.Println(<span class="string">"tick tick @ "</span>, t)</div><div class="line">	&#125;</div><div class="line">&#125;()</div><div class="line">time.Sleep(time.Second * <span class="number">3</span>)</div><div class="line">t1.Stop()</div><div class="line">fmt.Println(<span class="string">"tick tick stop"</span>)</div></pre></td></tr></table></figure></p>
<h3 id="worker-pool-worker池"><a href="#worker-pool-worker池" class="headerlink" title="worker pool/worker池"></a>worker pool/worker池</h3><p>可以把一个goroutine看作一个worker。给多个worker传入相同的channel，worker从channel中取任务并处理，主线程往channel中添加任务，这样过个goroutine处理一个任务队列。<br><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">jobs := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>, <span class="number">100</span>)</div><div class="line">result := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>, <span class="number">100</span>)</div><div class="line"><span class="comment">// use five workers</span></div><div class="line"><span class="keyword">for</span> w:=<span class="number">0</span>; w&lt;<span class="number">5</span>; w++ &#123;</div><div class="line">  <span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">(w <span class="keyword">int</span>, jobs &lt;-<span class="keyword">chan</span> <span class="keyword">int</span>, result <span class="keyword">chan</span>&lt;- <span class="keyword">int</span>)</span></span> &#123;</div><div class="line">    <span class="keyword">for</span> j:= <span class="keyword">range</span> jobs &#123;</div><div class="line">      fmt.Println(<span class="string">"worker"</span>, w, <span class="string">"processing on"</span>, j)    </div><div class="line">      time.Sleep(time.Millisecond * time.Duration(rand.Intn(<span class="number">600</span>))) <span class="comment">// sleep a random time</span></div><div class="line">      result &lt;- j * <span class="number">2</span></div><div class="line">    &#125;</div><div class="line">  &#125;(w, jobs, result)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// insert jobs</span></div><div class="line"><span class="keyword">for</span> j:=<span class="number">0</span>; j&lt;<span class="number">10</span>; j++ &#123;</div><div class="line">  jobs &lt;- j</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="built_in">close</span>(jobs)</div><div class="line"></div><div class="line"><span class="comment">// can do some others here</span></div><div class="line"></div><div class="line"><span class="comment">// sync here, may wait for works done</span></div><div class="line"><span class="keyword">for</span> a :=<span class="number">0</span>; a&lt;<span class="number">10</span>; a++ &#123;</div><div class="line">  &lt;- result</div><div class="line">&#125;</div><div class="line">fmt.Println(<span class="string">"all work done here"</span>)</div></pre></td></tr></table></figure></p>
<h3 id="rate-limiting"><a href="#rate-limiting" class="headerlink" title="rate-limiting"></a>rate-limiting</h3><p>使用goroutine，channel， ticker合作实现该特性<br>使用两个channel协同，一个用于处理速率的控制，一个用于请求的缓冲。使用一个goroutine不断的定时填充速率控制goroutine，而请求channel则用一个for-range不停行从里面取请求<br><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">rateControlChan := <span class="built_in">make</span>(<span class="keyword">chan</span> time.Time, <span class="number">3</span>) <span class="comment">// 用于控制速率的channel</span></div><div class="line"><span class="keyword">for</span> i:=<span class="number">0</span>; i&lt;<span class="number">3</span>; i++ &#123;</div><div class="line">  rateControlChan &lt;- time.Now()</div><div class="line">&#125;</div><div class="line"><span class="comment">// send value per 200 millisecond</span></div><div class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</div><div class="line">  <span class="keyword">for</span> t := <span class="keyword">range</span> time.Tick(time.Millisecond * <span class="number">200</span>) &#123;</div><div class="line">    rateControlChan &lt;- t</div><div class="line">  &#125;</div><div class="line">&#125;()</div><div class="line"></div><div class="line">reqChannel := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>, <span class="number">5</span>) <span class="comment">// 缓存请求的channel</span></div><div class="line"><span class="keyword">for</span> i:=<span class="number">0</span>; i&lt; <span class="number">5</span>; i++ &#123;</div><div class="line">  reqChannel &lt;- i</div><div class="line">&#125;</div><div class="line"><span class="built_in">close</span>(reqChannel)</div><div class="line"><span class="keyword">for</span> r:= <span class="keyword">range</span> reqChannel &#123;</div><div class="line">  ht := &lt;- rateControlChan <span class="comment">// wait for rate-control condition</span></div><div class="line">  <span class="comment">// handle request here</span></div><div class="line">  fmt.Println(<span class="string">"req"</span>, r, <span class="string">"handle at"</span>, ht)</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="rand"><a href="#rand" class="headerlink" title="rand"></a>rand</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">rs := rand.NewSource(time.Now().UnixNano())</div><div class="line">r := rand.New(rs)</div><div class="line"><span class="comment">// r此时是一个新的随机数生成器</span></div><div class="line"><span class="comment">// 正式使用应该这样</span></div><div class="line">r.Intn(<span class="number">100</span>)</div><div class="line">rand.Float64()  <span class="comment">// 返回0-1之间的一个浮点数</span></div><div class="line">rand.Int31()</div><div class="line">rand.Uint32()</div></pre></td></tr></table></figure>
<h2 id="strconv"><a href="#strconv" class="headerlink" title="strconv"></a>strconv</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">// parseFloat原型</div><div class="line">func ParseFloat(s string, bitSize int) (f float64, err error)</div><div class="line">f,_ := strconv.ParseFloat("1.23", 64)   // 转换到64位Float，不处理转换的错误</div><div class="line"></div><div class="line">// parseInt的原型， base从2-36</div><div class="line">func ParseInt(s string, base int, bitSize int) (i int64, err error)</div><div class="line"></div><div class="line">// 更常用的</div><div class="line">k,_ := strconv.Atoi("123")  // k=123</div><div class="line">_,e := strconv.Atoi("wrongFormat")  // will return error</div></pre></td></tr></table></figure>
<h2 id="url-parse"><a href="#url-parse" class="headerlink" title="url parse"></a>url parse</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> <span class="string">"net/url"</span></div><div class="line"></div><div class="line">urlStr := <span class="string">"https://gobyexample.com/url-parsing?from=goole#url-parsing"</span></div><div class="line">u, err := url.Parse(urlStr)</div><div class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;  fmt.Println(err)</div><div class="line">&#125;</div><div class="line">fmt.Println(u.Scheme,u.Host, u.Path, u.Fragment, u.RawQuery)</div><div class="line">host, port, _ := net.SplitHostPort(u.Host)</div><div class="line"></div><div class="line">user := u.User</div><div class="line">username := <span class="string">"null"</span></div><div class="line"><span class="keyword">if</span> user != <span class="literal">nil</span> &#123;</div><div class="line">  username = user.Username()  <span class="comment">// user.Password()</span></div><div class="line">&#125;</div><div class="line">fmt.Println(<span class="string">"username"</span>, username)</div><div class="line"><span class="comment">// 解析queryString</span></div><div class="line">query, _ := url.ParseQuery(u.RawQuery)</div><div class="line">fmt.Println(query, query[<span class="string">"from"</span>][<span class="number">0</span>])</div></pre></td></tr></table></figure>
<h2 id="A-Full-Example-For-Polymorphism-amp-Composition"><a href="#A-Full-Example-For-Polymorphism-amp-Composition" class="headerlink" title="A Full Example For Polymorphism &amp; Composition"></a>A Full Example For Polymorphism &amp; Composition</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Sample program to show what happens when the outer and inner</span></div><div class="line"><span class="comment">// type implement the same interface.</span></div><div class="line"><span class="keyword">package</span> main</div><div class="line"></div><div class="line"><span class="keyword">import</span> (</div><div class="line">	<span class="string">"fmt"</span></div><div class="line">)</div><div class="line"></div><div class="line"><span class="comment">// notifier is an interface that defined notification</span></div><div class="line"><span class="comment">// type behavior.</span></div><div class="line"><span class="keyword">type</span> notifier <span class="keyword">interface</span> &#123;</div><div class="line">	notify()</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// user defines a user in the program.</span></div><div class="line"><span class="keyword">type</span> user <span class="keyword">struct</span> &#123;</div><div class="line">	name  <span class="keyword">string</span></div><div class="line">	email <span class="keyword">string</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// admin represents an admin user with privileges.</span></div><div class="line"><span class="keyword">type</span> admin <span class="keyword">struct</span> &#123;</div><div class="line">	user</div><div class="line">	level <span class="keyword">string</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// notify implements a method that can be called via</span></div><div class="line"><span class="comment">// a value of type user.</span></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="params">(u *user)</span> <span class="title">notify</span><span class="params">()</span></span> &#123;</div><div class="line">	fmt.Printf(<span class="string">"user: Sending user email To %s&lt;%s&gt;\n"</span>,</div><div class="line">		u.name,</div><div class="line">		u.email)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// notify implements a method that can be called via</span></div><div class="line"><span class="comment">// a value of type Admin.</span></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="params">(a *admin)</span> <span class="title">notify</span><span class="params">()</span></span> &#123;</div><div class="line">	fmt.Printf(<span class="string">"User: Sending Admin Email To %s&lt;%s&gt;\n"</span>,</div><div class="line">		a.name,</div><div class="line">		a.email)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// main is the entry point for the application.</span></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</div><div class="line">	<span class="comment">// Create an admin user.</span></div><div class="line">	ad := admin&#123;</div><div class="line">		user: user&#123;</div><div class="line">			name:  <span class="string">"john smith"</span>,</div><div class="line">			email: <span class="string">"john@yahoo.com"</span>,</div><div class="line">		&#125;,</div><div class="line">		level: <span class="string">"super"</span>,</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">// Send the admin user a notification.</span></div><div class="line">	<span class="comment">// The embedded inner type's implementation of the</span></div><div class="line">	<span class="comment">// interface is NOT "promoted" to the outer type.</span></div><div class="line">	sendNotification(&amp;ad)</div><div class="line"></div><div class="line">	<span class="comment">// We can access the inner type's method directly.</span></div><div class="line">	ad.user.notify()</div><div class="line"></div><div class="line">	<span class="comment">// The inner type's method is NOT promoted.</span></div><div class="line">	ad.notify()</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// sendNotification accepts values that implement the notifier</span></div><div class="line"><span class="comment">// interface and sends notifications.</span></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">sendNotification</span><span class="params">(n notifier)</span></span> &#123;</div><div class="line">	n.notify()</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;reference from: &lt;a href=&quot;http://blog.wuxu92.com/&quot;&gt;http://blog.wuxu92.com/&lt;/a&gt;&lt;/p&gt;
&lt;!-- toc --&gt;
    
    </summary>
    
      <category term="golang" scheme="http://cwza.github.io/my_blog/categories/golang/"/>
    
    
      <category term="golang" scheme="http://cwza.github.io/my_blog/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>go-middleware筆記</title>
    <link href="http://cwza.github.io/my_blog/2017/03/15/go-middleware%E7%AD%86%E8%A8%98/"/>
    <id>http://cwza.github.io/my_blog/2017/03/15/go-middleware筆記/</id>
    <published>2017-03-15T08:00:57.000Z</published>
    <updated>2017-03-15T08:07:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>Two example about middleware in go<br>Reference: <a href="http://www.alexedwards.net/blog/making-and-using-middleware" target="_blank" rel="external">http://www.alexedwards.net/blog/making-and-using-middleware</a></p>
<a id="more"></a>
<h2 id="A-basic-middleware-chain-example"><a href="#A-basic-middleware-chain-example" class="headerlink" title="A basic middleware chain example"></a>A basic middleware chain example</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> main</div><div class="line"></div><div class="line"><span class="keyword">import</span> (</div><div class="line">  <span class="string">"log"</span></div><div class="line">  <span class="string">"net/http"</span></div><div class="line">)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">middlewareOne</span><span class="params">(next http.Handler)</span> <span class="title">http</span>.<span class="title">Handler</span></span> &#123;</div><div class="line">  <span class="keyword">return</span> http.HandlerFunc(<span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</div><div class="line">    log.Println(<span class="string">"Executing middlewareOne"</span>)</div><div class="line">    next.ServeHTTP(w, r)</div><div class="line">    log.Println(<span class="string">"Executing middlewareOne again"</span>)</div><div class="line">  &#125;)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">middlewareTwo</span><span class="params">(next http.Handler)</span> <span class="title">http</span>.<span class="title">Handler</span></span> &#123;</div><div class="line">  <span class="keyword">return</span> http.HandlerFunc(<span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</div><div class="line">    log.Println(<span class="string">"Executing middlewareTwo"</span>)</div><div class="line">    <span class="keyword">if</span> r.URL.Path != <span class="string">"/"</span> &#123;</div><div class="line">      <span class="keyword">return</span></div><div class="line">    &#125;</div><div class="line">    next.ServeHTTP(w, r)</div><div class="line">    log.Println(<span class="string">"Executing middlewareTwo again"</span>)</div><div class="line">  &#125;)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">final</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</div><div class="line">  log.Println(<span class="string">"Executing finalHandler"</span>)</div><div class="line">  w.Write([]<span class="keyword">byte</span>(<span class="string">"OK"</span>))</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</div><div class="line">  finalHandler := http.HandlerFunc(final)</div><div class="line"></div><div class="line">  http.Handle(<span class="string">"/"</span>, middlewareOne(middlewareTwo(finalHandler)))</div><div class="line">  http.ListenAndServe(<span class="string">":3000"</span>, <span class="literal">nil</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="example-of-chaining-3rd-party-middleware"><a href="#example-of-chaining-3rd-party-middleware" class="headerlink" title="example of chaining 3rd party middleware"></a>example of chaining 3rd party middleware</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">package</span> main</div><div class="line"></div><div class="line"><span class="keyword">import</span> (</div><div class="line">	<span class="string">"bytes"</span></div><div class="line">	<span class="string">"github.com/goji/httpauth"</span></div><div class="line">	<span class="string">"github.com/gorilla/handlers"</span></div><div class="line">	<span class="string">"net/http"</span></div><div class="line">	<span class="string">"os"</span></div><div class="line">)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">enforceXMLHandler</span><span class="params">(next http.Handler)</span> <span class="title">http</span>.<span class="title">Handler</span></span> &#123;</div><div class="line">	<span class="keyword">return</span> http.HandlerFunc(<span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</div><div class="line">		<span class="keyword">if</span> r.ContentLength == <span class="number">0</span> &#123;</div><div class="line">			http.Error(w, http.StatusText(<span class="number">400</span>), <span class="number">400</span>)</div><div class="line">			<span class="keyword">return</span></div><div class="line">		&#125;</div><div class="line"></div><div class="line">		buf := <span class="built_in">new</span>(bytes.Buffer)</div><div class="line">		buf.ReadFrom(r.Body)</div><div class="line">		<span class="keyword">if</span> http.DetectContentType(buf.Bytes()) != <span class="string">"text/xml; charset=utf-8"</span> &#123;</div><div class="line">			http.Error(w, http.StatusText(<span class="number">415</span>), <span class="number">415</span>)</div><div class="line">			<span class="keyword">return</span></div><div class="line">		&#125;</div><div class="line"></div><div class="line">		next.ServeHTTP(w, r)</div><div class="line">	&#125;)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">myLoggingHandler</span><span class="params">(h http.Handler)</span> <span class="title">http</span>.<span class="title">Handler</span></span> &#123;</div><div class="line">	logFile, err := os.OpenFile(<span class="string">"server.log"</span>, os.O_RDWR|os.O_CREATE|os.O_APPEND, <span class="number">0666</span>)</div><div class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</div><div class="line">		<span class="built_in">panic</span>(err)</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> handlers.LoggingHandler(logFile, h)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</div><div class="line">	indexHandler := http.HandlerFunc(index)</div><div class="line">	authHandler := httpauth.SimpleBasicAuth(<span class="string">"username"</span>, <span class="string">"password"</span>)</div><div class="line"></div><div class="line">	http.Handle(<span class="string">"/"</span>, myLoggingHandler(authHandler(enforceXMLHandler(indexHandler))))</div><div class="line">	http.ListenAndServe(<span class="string">":3000"</span>, <span class="literal">nil</span>)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">index</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</div><div class="line">	w.Write([]<span class="keyword">byte</span>(<span class="string">"OK"</span>))</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Two example about middleware in go&lt;br&gt;Reference: &lt;a href=&quot;http://www.alexedwards.net/blog/making-and-using-middleware&quot;&gt;http://www.alexedwards.net/blog/making-and-using-middleware&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="golang" scheme="http://cwza.github.io/my_blog/categories/golang/"/>
    
    
      <category term="golang" scheme="http://cwza.github.io/my_blog/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>glide筆記</title>
    <link href="http://cwza.github.io/my_blog/2017/03/15/glide%E7%AD%86%E8%A8%98/"/>
    <id>http://cwza.github.io/my_blog/2017/03/15/glide筆記/</id>
    <published>2017-03-15T06:13:57.000Z</published>
    <updated>2017-03-15T08:03:59.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/Masterminds/glide" target="_blank" rel="external">https://github.com/Masterminds/glide</a></p>
<h2 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install glide</div></pre></td></tr></table></figure>
<h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><p>source code需要放在gopath下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ glide create                            <span class="comment"># Start a new workspace</span></div><div class="line">$ open glide.yaml                         <span class="comment"># and edit away!</span></div><div class="line">$ glide get github.com/Masterminds/cookoo <span class="comment"># Get a package and add to glide.yaml</span></div><div class="line">$ glide install                           <span class="comment"># Install packages and dependencies</span></div><div class="line"><span class="comment"># work, work, work</span></div><div class="line">$ go build                                <span class="comment"># Go tools work normally</span></div><div class="line">$ glide up                                <span class="comment"># Update to newest versions of the package</span></div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/Masterminds/glide&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/Masterminds/glide&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;安裝&quot;&gt;&lt;a
    
    </summary>
    
      <category term="golang" scheme="http://cwza.github.io/my_blog/categories/golang/"/>
    
    
      <category term="golang" scheme="http://cwza.github.io/my_blog/tags/golang/"/>
    
      <category term="glide" scheme="http://cwza.github.io/my_blog/tags/glide/"/>
    
  </entry>
  
  <entry>
    <title>gvm筆記與vscode整合</title>
    <link href="http://cwza.github.io/my_blog/2017/03/13/gvm%E7%AD%86%E8%A8%98%E8%88%87vscode%E6%95%B4%E5%90%88/"/>
    <id>http://cwza.github.io/my_blog/2017/03/13/gvm筆記與vscode整合/</id>
    <published>2017-03-13T10:11:57.000Z</published>
    <updated>2017-03-15T08:05:25.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/moovweb/gvm" target="_blank" rel="external">https://github.com/moovweb/gvm</a></p>
<h2 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">xcode-select --install</div><div class="line">brew update</div><div class="line">brew install mercurial</div><div class="line">bash &lt; &lt;(curl <span class="_">-s</span> -S -L https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer)</div><div class="line">gvm install go1.4 -B</div><div class="line">gvm use go1.4</div><div class="line"><span class="built_in">export</span> GOROOT_BOOTSTRAP=<span class="variable">$GOROOT</span></div><div class="line">gvm install 1.8</div></pre></td></tr></table></figure>
<h2 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">gvm install [version]</div><div class="line">gvm uninstall [version]</div><div class="line">gvm listall</div><div class="line">gvm list</div><div class="line">gvm use [version]</div><div class="line">gvm implode    // uninstall gvm</div></pre></td></tr></table></figure>
<h2 id="使用gvm來管理workspace"><a href="#使用gvm來管理workspace" class="headerlink" title="使用gvm來管理workspace"></a>使用gvm來管理workspace</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">go use [version]</div><div class="line">mkdir -p ~/golang/  </div><div class="line"><span class="built_in">cd</span> ~/golang/  </div><div class="line">gvm pkgset create --local  </div><div class="line">gvm pkgset use --local  </div><div class="line">mkdir src pkg bin</div><div class="line">go env</div></pre></td></tr></table></figure>
<p>利用pkgset將GOPATH設為自定的workspace path</p>
<h2 id="vscode-整合"><a href="#vscode-整合" class="headerlink" title="vscode 整合"></a>vscode 整合</h2><p>設定gopath與goroot為go env的值<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">go use [version]</div><div class="line">go env</div></pre></td></tr></table></figure></p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="attr">"go.gopath"</span>:<span class="string">"/Users/meep007/cwz/develop/practice/golang:/Users/meep007/cwz/develop/practice/golang/.gvm_local/pkgsets/go1.8/local:/Users/meep007/.gvm/pkgsets/go1.8/global"</span>,</div><div class="line">  <span class="attr">"go.goroot"</span>: <span class="string">"/Users/meep007/.gvm/gos/go1.8"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/moovweb/gvm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/moovweb/gvm&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;安裝&quot;&gt;&lt;a href=&quot;#安裝&quot; 
    
    </summary>
    
      <category term="golang" scheme="http://cwza.github.io/my_blog/categories/golang/"/>
    
    
      <category term="golang" scheme="http://cwza.github.io/my_blog/tags/golang/"/>
    
      <category term="gvm" scheme="http://cwza.github.io/my_blog/tags/gvm/"/>
    
  </entry>
  
  <entry>
    <title>nginx connection limit bandwith limit rate limit</title>
    <link href="http://cwza.github.io/my_blog/2017/02/13/nginx-connection-limit-bandwith-limit-rate-limit/"/>
    <id>http://cwza.github.io/my_blog/2017/02/13/nginx-connection-limit-bandwith-limit-rate-limit/</id>
    <published>2017-02-13T08:30:57.000Z</published>
    <updated>2017-03-13T10:22:07.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="connection-limit"><a href="#connection-limit" class="headerlink" title="connection limit"></a>connection limit</h2><p>每一ip最多50連線數<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">limit_conn_zone <span class="variable">$binary_remote_addr</span> zone=connlimit:10m;</div><div class="line">server &#123;</div><div class="line">    <span class="comment"># ...</span></div><div class="line">    location / &#123;</div><div class="line">      limit_conn connlimit 50;</div><div class="line">      <span class="comment"># ...</span></div><div class="line">    &#125;</div><div class="line">    <span class="comment"># ...</span></div><div class="line"> &#125;</div></pre></td></tr></table></figure></p>
<h2 id="bandwith-limit"><a href="#bandwith-limit" class="headerlink" title="bandwith limit"></a>bandwith limit</h2><p>當流量超過500k時限制速度為50k<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">limit_conn_zone <span class="variable">$binary_remote_addr</span> zone=connlimit:10m;</div><div class="line"></div><div class="line">server &#123;</div><div class="line">    <span class="comment"># ...</span></div><div class="line">    location / &#123;</div><div class="line">      limit_rate 50k;</div><div class="line">      limit_rate_after 500k;</div><div class="line">      <span class="comment"># ...</span></div><div class="line">    &#125;</div><div class="line"> &#125;</div></pre></td></tr></table></figure></p>
<h2 id="rate-limit"><a href="#rate-limit" class="headerlink" title="rate limit"></a>rate limit</h2><p>每秒最多50 request<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">limit_req_zone <span class="variable">$binary_remote_addr</span> zone=one:10m rate=50r/s;</div><div class="line"></div><div class="line">server &#123;</div><div class="line">    <span class="comment"># ...</span></div><div class="line">    location / &#123;</div><div class="line">      limit_req zone=one burst=5 nodelay;</div><div class="line">      <span class="comment"># ...</span></div><div class="line">    &#125;</div><div class="line">    <span class="comment"># ...</span></div><div class="line"> &#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;connection-limit&quot;&gt;&lt;a href=&quot;#connection-limit&quot; class=&quot;headerlink&quot; title=&quot;connection limit&quot;&gt;&lt;/a&gt;connection limit&lt;/h2&gt;&lt;p&gt;每一ip最多50連線數&lt;br
    
    </summary>
    
      <category term="web" scheme="http://cwza.github.io/my_blog/categories/web/"/>
    
    
      <category term="nginx" scheme="http://cwza.github.io/my_blog/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>nginx and ufw add rate limit</title>
    <link href="http://cwza.github.io/my_blog/2017/02/13/nginx-and-ufw-add-rate-limit/"/>
    <id>http://cwza.github.io/my_blog/2017/02/13/nginx-and-ufw-add-rate-limit/</id>
    <published>2017-02-13T08:30:57.000Z</published>
    <updated>2017-03-10T02:26:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>production環境下需要設定rate limit來避免DOS攻擊<br>以下介紹兩種設定方式，一種是讓ap server來擋(這裡介紹nginx)，一種是讓系統防火墻來擋(這裡介紹ufw)</p>
<a id="more"></a>
<h2 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h2><p>將limit_req_zone $binary_remote_addr zone=one:10m rate=10r/s;加入nginx.conf最上一層<br>將limit_req zone=one burst=5 nodelay;加入欲使用rate limit的location中<br>nginx.fonf Ex:<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># the IP(s) on which your node server is running. I chose port 3000.</span></div><div class="line">upstream app_faceblock &#123;</div><div class="line">    server 127.0.0.1:3001;</div><div class="line">    keepalive 8;</div><div class="line">&#125;</div><div class="line"></div><div class="line">limit_req_zone <span class="variable">$binary_remote_addr</span> zone=one:10m rate=10r/s;</div><div class="line"></div><div class="line"><span class="comment"># the nginx server instance</span></div><div class="line">server &#123;</div><div class="line">    listen 0.0.0.0:80;</div><div class="line">    server_name cwzc.pw www.cwzc.pw;</div><div class="line">    access_log /var/<span class="built_in">log</span>/nginx/faceblock.log;</div><div class="line"></div><div class="line">    listen 443 ssl default_server;</div><div class="line">    listen [::]:443 ssl default_server;</div><div class="line"></div><div class="line">    ssl_certificate /etc/nginx/ssl/nginx.crt;</div><div class="line">    ssl_certificate_key /etc/nginx/ssl/nginx.key;</div><div class="line"></div><div class="line"></div><div class="line">    location /static &#123;</div><div class="line">      limit_req zone=one burst=5 nodelay;</div><div class="line">      root /static;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment"># pass the request to the node.js server with the correct headers</span></div><div class="line">    <span class="comment"># and much more can be added, see nginx config options</span></div><div class="line">    location / &#123;</div><div class="line">      limit_req zone=one burst=5 nodelay;</div><div class="line"></div><div class="line">      proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</div><div class="line">      proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</div><div class="line">      proxy_set_header Host <span class="variable">$http_host</span>;</div><div class="line">      proxy_set_header X-NginX-Proxy <span class="literal">true</span>;</div><div class="line"></div><div class="line">      proxy_pass http://app_faceblock/;</div><div class="line">      proxy_redirect off;</div><div class="line">    &#125;</div><div class="line"> &#125;</div></pre></td></tr></table></figure></p>
<h2 id="ufw"><a href="#ufw" class="headerlink" title="ufw"></a>ufw</h2><p>ufw是ubuntu中的Filewall<br>可以讓我們自定各種rule<br>詳細解釋請參照<a href="https://gist.github.com/lavoiesl/3740917" target="_blank" rel="external">https://gist.github.com/lavoiesl/3740917</a><br>修改/etc/ufw/user.rules<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="comment">### Add those lines after *filter near the beginning of the file</span></div><div class="line">:ufw-http - [0:0]</div><div class="line">:ufw-http-logdrop - [0:0]</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">### Add those lines near the end of the file</span></div><div class="line"></div><div class="line"><span class="comment">### Start HTTP ###</span></div><div class="line"></div><div class="line"><span class="comment"># Enter rule</span></div><div class="line">-A ufw-before-input -p tcp --dport 80   -j ufw-http</div><div class="line">-A ufw-before-input -p tcp --dport 443  -j ufw-http</div><div class="line"></div><div class="line"><span class="comment"># Limit connections per Class C</span></div><div class="line">-A ufw-http -p tcp --syn -m connlimit --connlimit-above 50 --connlimit-mask 24 -j ufw-http-logdrop</div><div class="line"></div><div class="line"><span class="comment"># Limit connections per IP</span></div><div class="line">-A ufw-http -m state --state NEW -m recent --name conn_per_ip --set</div><div class="line">-A ufw-http -m state --state NEW -m recent --name conn_per_ip --update --seconds 10 --hitcount 20 -j ufw-http-logdrop</div><div class="line"></div><div class="line"><span class="comment"># Limit packets per IP</span></div><div class="line">-A ufw-http -m recent --name pack_per_ip --set</div><div class="line">-A ufw-http -m recent --name pack_per_ip --update --seconds 1  --hitcount 20  -j ufw-http-logdrop</div><div class="line"></div><div class="line"><span class="comment"># Finally accept</span></div><div class="line">-A ufw-http -j ACCEPT</div><div class="line"></div><div class="line"><span class="comment"># Log-A ufw-http-logdrop -m limit --limit 3/min --limit-burst 10 -j LOG --log-prefix "[UFW HTTP DROP] "</span></div><div class="line">-A ufw-http-logdrop -j DROP</div><div class="line"></div><div class="line"><span class="comment">### End HTTP ###</span></div></pre></td></tr></table></figure></p>
<p>restart ufw<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ufw <span class="built_in">disable</span></div><div class="line">ufw <span class="built_in">enable</span></div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;production環境下需要設定rate limit來避免DOS攻擊&lt;br&gt;以下介紹兩種設定方式，一種是讓ap server來擋(這裡介紹nginx)，一種是讓系統防火墻來擋(這裡介紹ufw)&lt;/p&gt;
    
    </summary>
    
      <category term="web" scheme="http://cwza.github.io/my_blog/categories/web/"/>
    
    
      <category term="nginx" scheme="http://cwza.github.io/my_blog/tags/nginx/"/>
    
      <category term="firewall" scheme="http://cwza.github.io/my_blog/tags/firewall/"/>
    
      <category term="ubuntu" scheme="http://cwza.github.io/my_blog/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>docker compose筆記</title>
    <link href="http://cwza.github.io/my_blog/2017/02/10/docker-compose%E7%AD%86%E8%A8%98/"/>
    <id>http://cwza.github.io/my_blog/2017/02/10/docker-compose筆記/</id>
    <published>2017-02-10T08:37:57.000Z</published>
    <updated>2017-03-10T02:26:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>Container之間有關係時可以用docker command中的–link搞定<br>當有多個Container需要連結時我們會希望能撰寫一份設定檔定義Container之間的關係然後執行就好<br>這就是docker-compose在做的事<br>撰寫docker-compose.yml定義各Container link relation<br>然後run docker-compose up -d</p>
<h2 id="Command"><a href="#Command" class="headerlink" title="Command"></a>Command</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker-compose <span class="_">-f</span> ./docker-compose.yml up <span class="_">-d</span></div></pre></td></tr></table></figure>
<h2 id="docker-compose-yml-example"><a href="#docker-compose-yml-example" class="headerlink" title="docker-compose.yml example"></a>docker-compose.yml example</h2><p>以下設定表示<br>faceblock是ap server<br>zombodb_postgres是postgres database<br>zombodb_elastic是elasticsearch database<br>faceblock相依於zombodb_postgres<br>zombodb_postgres相依於zombodb_elastic<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">faceblock:</div><div class="line">  build: ./faceblock <span class="comment"># DockerFile location</span></div><div class="line">  ports: <span class="comment"># export ports</span></div><div class="line">   - <span class="string">"3001:3000"</span></div><div class="line">   - <span class="string">"3043:443"</span></div><div class="line">  links: <span class="comment"># dependency</span></div><div class="line">   - zombodb_postgres</div><div class="line">  entrypoint: /execute.sh</div><div class="line"></div><div class="line">zombodb_postgres:</div><div class="line">  build: ./postgres</div><div class="line">  ports:</div><div class="line">   - <span class="string">"5432:5432"</span></div><div class="line">  links:</div><div class="line">   - zombodb_elastic</div><div class="line">  restart: always <span class="comment"># auto restart while exit</span></div><div class="line"></div><div class="line">zombodb_elastic:</div><div class="line">  build: ./elasticsearch</div><div class="line">  ports:</div><div class="line">   - <span class="string">"9200:9200"</span></div><div class="line">   - <span class="string">"9300:9300"</span></div><div class="line">  restart: always</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Container之間有關係時可以用docker command中的–link搞定&lt;br&gt;當有多個Container需要連結時我們會希望能撰寫一份設定檔定義Container之間的關係然後執行就好&lt;br&gt;這就是docker-compose在做的事&lt;br&gt;撰寫docker-c
    
    </summary>
    
      <category term="computer-science" scheme="http://cwza.github.io/my_blog/categories/computer-science/"/>
    
    
      <category term="docker" scheme="http://cwza.github.io/my_blog/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>JS polyfill use core-js</title>
    <link href="http://cwza.github.io/my_blog/2017/02/09/JS-polyfill-use-core-js/"/>
    <id>http://cwza.github.io/my_blog/2017/02/09/JS-polyfill-use-core-js/</id>
    <published>2017-02-09T09:40:57.000Z</published>
    <updated>2017-03-10T02:26:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>Create-React-App正常使用下無法更改babel設定<br>且為了保持產生的bundle.js不會太大<br>Create-React-App並不會將babel-polyfill全部打開<br>例如以下這些在IE中將會失敗的Function<br>Array.includes, String.includes, Object.values<br>以下簡單介紹3種解決辦法</p>
<a id="more"></a>
<h2 id="import-babel-polyfill"><a href="#import-babel-polyfill" class="headerlink" title="import babel-polyfill"></a>import babel-polyfill</h2><p>最簡單的方法，但會造成bundle.js增大<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> <span class="string">'babel-polyfill'</span>;</div></pre></td></tr></table></figure></p>
<h2 id="use-CDN"><a href="#use-CDN" class="headerlink" title="use CDN"></a>use CDN</h2><p>一樣會讓user下載整套polyfill<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.polyfill.io/v2/polyfill.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://wzrd.in/standalone/es7-shim@latest"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h2 id="use-core-js"><a href="#use-core-js" class="headerlink" title="use core-js"></a>use core-js</h2><p>babel-polyfill內部使用的是core-js<br>所以我們可以直接require core-js即可<br>當然可以部分require</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> () =&gt; &#123;</div><div class="line">  <span class="keyword">if</span> (!<span class="built_in">Array</span>.includes) &#123;</div><div class="line">    <span class="built_in">require</span>(<span class="string">'core-js/fn/array/includes'</span>);</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">if</span> (!<span class="built_in">String</span>.includes) &#123;</div><div class="line">    <span class="built_in">require</span>(<span class="string">'core-js/fn/string/includes'</span>);</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">if</span> (!<span class="built_in">Object</span>.values) &#123;</div><div class="line">    <span class="built_in">require</span>(<span class="string">'core-js/fn/object/values'</span>);</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">if</span> (!<span class="built_in">String</span>.endsWith) &#123;</div><div class="line">    <span class="built_in">require</span>(<span class="string">'core-js/fn/string/ends-with'</span>);</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">if</span> (!<span class="built_in">String</span>.startsWith) &#123;</div><div class="line">    <span class="built_in">require</span>(<span class="string">'core-js/fn/string/starts-with'</span>);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Create-React-App正常使用下無法更改babel設定&lt;br&gt;且為了保持產生的bundle.js不會太大&lt;br&gt;Create-React-App並不會將babel-polyfill全部打開&lt;br&gt;例如以下這些在IE中將會失敗的Function&lt;br&gt;Array.includes, String.includes, Object.values&lt;br&gt;以下簡單介紹3種解決辦法&lt;/p&gt;
    
    </summary>
    
      <category term="javascript" scheme="http://cwza.github.io/my_blog/categories/javascript/"/>
    
    
      <category term="javascript" scheme="http://cwza.github.io/my_blog/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>Digital Ocean Domain And Swap Setting</title>
    <link href="http://cwza.github.io/my_blog/2017/02/09/Digital-Ocean-Domain-And-Swap-Setting/"/>
    <id>http://cwza.github.io/my_blog/2017/02/09/Digital-Ocean-Domain-And-Swap-Setting/</id>
    <published>2017-02-09T08:21:57.000Z</published>
    <updated>2017-03-10T02:26:35.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Domain-Setting"><a href="#Domain-Setting" class="headerlink" title="Domain Setting"></a>Domain Setting</h2><ol>
<li>買一個domain(namecheap之類的)</li>
<li>照著官方文件做吧<br><a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-a-host-name-with-digitalocean" target="_blank" rel="external">https://www.digitalocean.com/community/tutorials/how-to-set-up-a-host-name-with-digitalocean</a></li>
</ol>
<h2 id="Swap-Setting"><a href="#Swap-Setting" class="headerlink" title="Swap Setting"></a>Swap Setting</h2><p>Digital Ocean每月5美金的那個VPS，記憶體只有512MB<br>並且Digital Ocean預設OS的Swap是關閉的（官方說明SSD不建議使用swap）<br>若在上面再用docker的話高機率因為記憶體不足process被kill掉<br>若是真的不想加錢買更多記憶體的話還是可以手動開啟swap</p>
<p>一樣官方文件照著做就好<br><a href="https://www.digitalocean.com/community/tutorials/how-to-add-swap-on-ubuntu-14-04" target="_blank" rel="external">https://www.digitalocean.com/community/tutorials/how-to-add-swap-on-ubuntu-14-04</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Domain-Setting&quot;&gt;&lt;a href=&quot;#Domain-Setting&quot; class=&quot;headerlink&quot; title=&quot;Domain Setting&quot;&gt;&lt;/a&gt;Domain Setting&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;買一個domain(namech
    
    </summary>
    
      <category term="web" scheme="http://cwza.github.io/my_blog/categories/web/"/>
    
    
      <category term="web" scheme="http://cwza.github.io/my_blog/tags/web/"/>
    
      <category term="digital-ocean" scheme="http://cwza.github.io/my_blog/tags/digital-ocean/"/>
    
  </entry>
  
  <entry>
    <title>use gh-pages to auto deploy static files to github pages</title>
    <link href="http://cwza.github.io/my_blog/2017/02/08/use-gh-pages-to-auto-deploy-static-files-to-github-pages/"/>
    <id>http://cwza.github.io/my_blog/2017/02/08/use-gh-pages-to-auto-deploy-static-files-to-github-pages/</id>
    <published>2017-02-07T20:22:57.000Z</published>
    <updated>2017-03-10T02:26:35.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/tschaub/gh-pages" target="_blank" rel="external">https://github.com/tschaub/gh-pages</a><br>Publish files to a gh-pages branch on GitHub</p>
<h2 id="install"><a href="#install" class="headerlink" title="install"></a>install</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install gh-pages --save-dev</div></pre></td></tr></table></figure>
<h2 id="config"><a href="#config" class="headerlink" title="config"></a>config</h2><p>add following to package.json<br>-d : base path of static files<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="string">"scripts"</span>: &#123;</div><div class="line">  <span class="string">"deploy"</span>: <span class="string">"gh-pages -d dist"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm run deploy</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/tschaub/gh-pages&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/tschaub/gh-pages&lt;/a&gt;&lt;br&gt;Publish files to 
    
    </summary>
    
      <category term="web" scheme="http://cwza.github.io/my_blog/categories/web/"/>
    
    
      <category term="github" scheme="http://cwza.github.io/my_blog/tags/github/"/>
    
      <category term="javascript" scheme="http://cwza.github.io/my_blog/tags/javascript/"/>
    
      <category term="web" scheme="http://cwza.github.io/my_blog/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>jwt筆記</title>
    <link href="http://cwza.github.io/my_blog/2017/02/06/jwt%E7%AD%86%E8%A8%98/"/>
    <id>http://cwza.github.io/my_blog/2017/02/06/jwt筆記/</id>
    <published>2017-02-06T07:10:57.000Z</published>
    <updated>2017-03-10T02:26:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>json web token 簡單筆記</p>
<a id="more"></a>
<h2 id="Basic"><a href="#Basic" class="headerlink" title="Basic"></a>Basic</h2><p>通常使用在驗證client是否已登入過，若Client將未失效token藉由header一起發送，則視為已登入<br>與傳統session最大分別在jwt驗證不需要在Server存任何訊息</p>
<h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><ul>
<li>Client request login</li>
<li>Server驗證User並建立jwt</li>
<li>jwt由User的非敏感信息與expire time …etc組成</li>
<li>token會藉由server的private key以HMAC alg.加密</li>
<li>Client之後的所有request皆需在header中帶上此token</li>
<li>Server收到token後使用密鑰解開並檢查是否失效，並根據token中的user信息判斷request user</li>
</ul>
<h2 id="very-easy-example"><a href="#very-easy-example" class="headerlink" title="very easy example"></a>very easy example</h2><p>以下code用來理解用<br>實際server端code使用library node-jsonwebtoken<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// javascript</span></div><div class="line"><span class="comment">// Server</span></div><div class="line"><span class="keyword">var</span> header = &#123; <span class="string">'typ'</span>: <span class="string">'JWT'</span>, <span class="string">'alg'</span>: <span class="string">'HS256'</span> &#125;;</div><div class="line"><span class="keyword">var</span> payload = &#123; <span class="string">"sub"</span>: <span class="string">"1234567890"</span>, <span class="string">"name"</span>: <span class="string">"John Doe"</span>, <span class="string">"admin"</span>: <span class="literal">true</span> &#125;;</div><div class="line"><span class="keyword">var</span> encodedString = base64UrlEncode(header) + <span class="string">'.'</span> + base64UrlEncode(payload);</div><div class="line"><span class="keyword">var</span> signature = HMACSHA256(encodedString, <span class="string">'secret'</span>);</div><div class="line"><span class="keyword">var</span> token = encodedString + <span class="string">'.'</span> + signature;</div><div class="line"></div><div class="line"><span class="comment">// Client</span></div><div class="line">fetch(<span class="string">'api/user/1'</span>, &#123; <span class="attr">headers</span>: &#123; <span class="string">'Authorization'</span>: <span class="string">'Bearer '</span> + token &#125; &#125;)</div></pre></td></tr></table></figure></p>
<h2 id="node-jsonwebtoken-example"><a href="#node-jsonwebtoken-example" class="headerlink" title="node-jsonwebtoken example"></a>node-jsonwebtoken example</h2><p><a href="https://github.com/auth0/node-jsonwebtoken" target="_blank" rel="external">https://github.com/auth0/node-jsonwebtoken</a></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> jwt = <span class="built_in">require</span>(<span class="string">'jsonwebtoken'</span>);</div><div class="line"><span class="keyword">const</span> expiresIn = <span class="string">'30m'</span>;</div><div class="line"></div><div class="line"><span class="keyword">const</span> createJwt = <span class="function">(<span class="params">user</span>) =&gt;</span> &#123;</div><div class="line">  <span class="keyword">return</span> jwt.sign(user, configs.app.privateKey, &#123;</div><div class="line">        <span class="attr">expiresIn</span>: expiresIn,</div><div class="line">        <span class="attr">issuer</span>: configs.app.name,</div><div class="line">    &#125;);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">const</span> verifyJwt = <span class="function">(<span class="params">jwtString</span>) =&gt;</span> &#123;</div><div class="line">  <span class="keyword">return</span> jwt.verify(jwtString, configs.app.privateKey, &#123;</div><div class="line">        <span class="attr">issuer</span>: configs.app.name,</div><div class="line">    &#125;);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// if user not found, create it. and return user and generated jwt</span></div><div class="line"><span class="keyword">const</span> checkUser = <span class="function">(<span class="params">userInfo</span>) =&gt;</span> &#123;</div><div class="line">  <span class="keyword">return</span> db.tx(<span class="string">'authenticationController.checkUser'</span>, <span class="function"><span class="keyword">function</span>* (<span class="params">t</span>) </span>&#123;</div><div class="line">    <span class="keyword">let</span> user = <span class="keyword">yield</span> t.users.findByMail(mail);</div><div class="line">    <span class="keyword">if</span>(!user) &#123;</div><div class="line">      user = <span class="keyword">yield</span> t.users.add(&#123;mail, picture&#125;);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> &#123;user, <span class="attr">faceblockToken</span>: createJwt(user)&#125;;</div><div class="line">  &#125;);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">const</span> login = <span class="function">(<span class="params">req</span>) =&gt;</span> &#123;</div><div class="line">  <span class="keyword">return</span> getUserInfoFromSocial(req.params.socialSite, req.params.socialToken)</div><div class="line">    .then(<span class="function"><span class="params">userInfo</span> =&gt;</span> &#123;</div><div class="line">      <span class="keyword">if</span>(!userInfo || !userInfo.email) <span class="keyword">throw</span> Errors.authenticationError();</div><div class="line">      <span class="keyword">return</span> checkUser(userInfo);</div><div class="line">    &#125;).then(<span class="function"><span class="params">userWithJwt</span> =&gt;</span> &#123;</div><div class="line">      <span class="keyword">let</span> response = &#123;</div><div class="line">        <span class="attr">authentication</span>: &#123;</div><div class="line">          <span class="attr">userId</span>: userWithJwt.user.id,</div><div class="line">          <span class="attr">faceblockToken</span>: userWithJwt.faceblockToken,</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">      <span class="keyword">return</span> response;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">const</span> authenticate = <span class="function">(<span class="params">req</span>) =&gt;</span> &#123;</div><div class="line">  <span class="keyword">try</span> &#123;</div><div class="line">    <span class="keyword">let</span> faceblockToken = req.headers[<span class="string">'faceblock-token'</span>];</div><div class="line">    <span class="keyword">let</span> userFromJwt = verifyJwt(faceblockToken);</div><div class="line">    <span class="keyword">return</span> db.users.find(userFromJwt.id);</div><div class="line">  &#125; <span class="keyword">catch</span>(error) &#123;</div><div class="line">    <span class="keyword">throw</span> Errors.authenticationError(error);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;json web token 簡單筆記&lt;/p&gt;
    
    </summary>
    
      <category term="web" scheme="http://cwza.github.io/my_blog/categories/web/"/>
    
    
      <category term="computer-science" scheme="http://cwza.github.io/my_blog/tags/computer-science/"/>
    
      <category term="javascript" scheme="http://cwza.github.io/my_blog/tags/javascript/"/>
    
      <category term="web" scheme="http://cwza.github.io/my_blog/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>HTTPS加密解密筆記</title>
    <link href="http://cwza.github.io/my_blog/2017/02/06/HTTPS%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86%E7%AD%86%E8%A8%98/"/>
    <id>http://cwza.github.io/my_blog/2017/02/06/HTTPS加密解密筆記/</id>
    <published>2017-02-06T06:00:57.000Z</published>
    <updated>2017-03-10T02:26:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>簡單的Https傳輸過程筆記</p>
<a id="more"></a>
<h2 id="Principle"><a href="#Principle" class="headerlink" title="Principle"></a>Principle</h2><h3 id="public-key-cryptography"><a href="#public-key-cryptography" class="headerlink" title="public-key cryptography"></a>public-key cryptography</h3><p>經過公鑰加密的密文只能藉由密鑰解密<br>經過私鑰加密的密文只能藉由公鑰解密<br>ex: RSA</p>
<h3 id="symmetric-key-algorithms"><a href="#symmetric-key-algorithms" class="headerlink" title="symmetric key algorithms"></a>symmetric key algorithms</h3><p>加密解密使用同一把密鑰<br>ex: DES</p>
<h2 id="過程"><a href="#過程" class="headerlink" title="過程"></a>過程</h2><ul>
<li>Client say hello to Server</li>
<li>Server send CA signed Certification to Client<ul>
<li>CA signed Certification詳細參照下節</li>
</ul>
</li>
<li>Client check Certification(Cert包含公鑰，確保Cert是由可信任的CA簽可的，確保該公鑰確實是該Server的)</li>
<li>Client send random string to Server</li>
<li>Server使用私鑰加密經過hash後的random string與hash演算法發送回Client(RSA)<ul>
<li>Hacker可能會發送多個簡單有規律的字串給Server獲得加密後的字串，企圖找出加密規律，hash後再傳送可避免這個</li>
</ul>
</li>
<li>Client用公鑰解密得到hash後的random string與hash演算法，並將原random string以hash演算法作hash並比對，若相同可確保是該Server送出的(RSA)</li>
<li>Client使用公鑰加密並送出密鑰與對稱加密演算法給Server(RSA)</li>
<li>Server使用私鑰解密得到對稱加密密鑰(RSA)</li>
<li>Client使用密鑰將帳號密碼與hash過的帳號密碼、hash演算法傳給Server(DES)<ul>
<li>hash可用來比對並確保傳輸過程中內容沒遭到修改</li>
</ul>
</li>
<li>Server使用密鑰解密得到帳號密碼與hash，Server將帳號密碼hash後與Client的hash比對，確保過程中是否內容有遭到修改(DES)</li>
<li>通訊過程中除了hash外也可將random value加入，若收到重複的random value則表示該內容可能是hacker為了干擾重複傳送的</li>
</ul>
<h2 id="Certification"><a href="#Certification" class="headerlink" title="Certification"></a>Certification</h2><p>Certification包含Issuer(CA)、valid to(有效期)、public key、Subject(上述過程中的Server)、Signature algorithm(對Thumbprint加密的演算法)、Thumbprint, Thumbprint algorithm(用來確保Cert的完整性確保沒被修改過)</p>
<ul>
<li>OS內建SecureTrust CA的Certification</li>
<li>Server提供公鑰與Server信息給CA申請Cert</li>
<li>CA必須驗證該公鑰確實為該Server所擁有並發送Cert給Server</li>
<li>Client收到Cert後以CA的公鑰與Signature Alg解密得到Thumbprint與Thumbprint alg.</li>
<li>Client使用Thumbprint alg.計算Cert的Thumbprint並比對</li>
<li>此時即可確保Cert沒被修改過且公鑰確實為該Server</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;簡單的Https傳輸過程筆記&lt;/p&gt;
    
    </summary>
    
      <category term="web" scheme="http://cwza.github.io/my_blog/categories/web/"/>
    
    
      <category term="computer-science" scheme="http://cwza.github.io/my_blog/tags/computer-science/"/>
    
      <category term="https" scheme="http://cwza.github.io/my_blog/tags/https/"/>
    
      <category term="ssl" scheme="http://cwza.github.io/my_blog/tags/ssl/"/>
    
      <category term="web" scheme="http://cwza.github.io/my_blog/tags/web/"/>
    
      <category term="cryptology" scheme="http://cwza.github.io/my_blog/tags/cryptology/"/>
    
  </entry>
  
  <entry>
    <title>USE TIMESTAMPTZ IN POSTGRES NOT TIMESTAMP</title>
    <link href="http://cwza.github.io/my_blog/2017/01/19/USE-TIMESTAMPTZ-IN-POSTGRES-NOT-TIMESTAMP/"/>
    <id>http://cwza.github.io/my_blog/2017/01/19/USE-TIMESTAMPTZ-IN-POSTGRES-NOT-TIMESTAMP/</id>
    <published>2017-01-19T10:53:57.000Z</published>
    <updated>2017-03-10T02:26:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>ALWAYS USE TIMESTAMPTZ NOT USE TIMESTAMP IN POSTGRES.<br>SET timezone = ‘UTC’ IN pgsql/data/postgresql.conf.</p>
<a id="more"></a>
<p>timestamptz is accepted as an abbreviation for timestamp with time zone.</p>
<p>USE THIS:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> <span class="keyword">users</span></div><div class="line">(</div><div class="line">    <span class="keyword">id</span> <span class="built_in">serial</span> PRIMARY <span class="keyword">KEY</span>,</div><div class="line">    mail <span class="built_in">text</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">UNIQUE</span>,</div><div class="line">    picture <span class="built_in">text</span>,</div><div class="line">    create_time timestamptz <span class="keyword">default</span> <span class="keyword">current_timestamp</span>,</div><div class="line">    update_time timestamptz <span class="keyword">default</span> <span class="keyword">current_timestamp</span></div><div class="line">);</div></pre></td></tr></table></figure></p>
<p>NOT THIS:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> <span class="keyword">users</span></div><div class="line">(</div><div class="line">    <span class="keyword">id</span> <span class="built_in">serial</span> PRIMARY <span class="keyword">KEY</span>,</div><div class="line">    mail <span class="built_in">text</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">UNIQUE</span>,</div><div class="line">    picture <span class="built_in">text</span>,</div><div class="line">    create_time <span class="keyword">timestamp</span> <span class="keyword">default</span> <span class="keyword">current_timestamp</span>,</div><div class="line">    update_time <span class="keyword">timestamp</span> <span class="keyword">default</span> <span class="keyword">current_timestamp</span></div><div class="line">);</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ALWAYS USE TIMESTAMPTZ NOT USE TIMESTAMP IN POSTGRES.&lt;br&gt;SET timezone = ‘UTC’ IN pgsql/data/postgresql.conf.&lt;/p&gt;
    
    </summary>
    
      <category term="database" scheme="http://cwza.github.io/my_blog/categories/database/"/>
    
    
      <category term="database" scheme="http://cwza.github.io/my_blog/tags/database/"/>
    
      <category term="postgres" scheme="http://cwza.github.io/my_blog/tags/postgres/"/>
    
  </entry>
  
  <entry>
    <title>Nginx With Node And Https config</title>
    <link href="http://cwza.github.io/my_blog/2017/01/19/Nginx-With-Node-And-Https-config/"/>
    <id>http://cwza.github.io/my_blog/2017/01/19/Nginx-With-Node-And-Https-config/</id>
    <published>2017-01-19T06:48:57.000Z</published>
    <updated>2017-03-10T02:26:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>Nginx With Node And Https config example<br><a id="more"></a></p>
<h1 id="nginx-config-examaple"><a href="#nginx-config-examaple" class="headerlink" title="nginx config examaple"></a>nginx config examaple</h1><p>pass all request to nodejs server</p>
<p>copy ssl cert files to /etc/nginx/ssl/<br>copy nginx.conf file to /etc/nginx/sites-available<br>and link to /etc/nginx/sites-enabled/<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cp ~/faceblock/faceblock-server/docker/faceblock/nginx.conf /etc/nginx/sites-available/faceblock</div><div class="line">ln <span class="_">-s</span> /etc/nginx/sites-available/faceblock /etc/nginx/sites-enabled/faceblock</div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># nginx.conf</span></div><div class="line"><span class="comment"># the IP(s) on which your node server is running. I chose port 3001.</span></div><div class="line">upstream app_faceblock &#123;</div><div class="line">    server 127.0.0.1:3001;</div><div class="line">    keepalive 8;</div><div class="line">&#125;</div><div class="line"></div><div class="line">limit_req_zone <span class="variable">$binary_remote_addr</span> zone=one:10m rate=10r/s; <span class="comment"># rate limit</span></div><div class="line"></div><div class="line"><span class="comment"># the nginx server instance</span></div><div class="line">server &#123;</div><div class="line">    listen 0.0.0.0:80;</div><div class="line">    server_name cwzc.pw www.cwzc.pw;</div><div class="line">    access_log /var/<span class="built_in">log</span>/nginx/faceblock.log;</div><div class="line"></div><div class="line">    listen 443 ssl default_server;</div><div class="line">    listen [::]:443 ssl default_server;</div><div class="line"></div><div class="line">    ssl_certificate /etc/nginx/ssl/nginx.crt;</div><div class="line">    ssl_certificate_key /etc/nginx/ssl/nginx.key;</div><div class="line"></div><div class="line">    location /static &#123;</div><div class="line">      limit_req zone=one burst=5 nodelay;</div><div class="line">      root /static;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment"># pass the request to the node.js server with the correct headers</span></div><div class="line">    <span class="comment"># and much more can be added, see nginx config options</span></div><div class="line">    location / &#123;</div><div class="line">      limit_req zone=one burst=5 nodelay;</div><div class="line">      </div><div class="line">      proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</div><div class="line">      proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</div><div class="line">      proxy_set_header Host <span class="variable">$http_host</span>;</div><div class="line">      proxy_set_header X-NginX-Proxy <span class="literal">true</span>;</div><div class="line"></div><div class="line">      proxy_pass http://app_faceblock/;</div><div class="line">      proxy_redirect off;</div><div class="line">    &#125;</div><div class="line"> &#125;</div></pre></td></tr></table></figure>
<h1 id="Free-SSL-Certification"><a href="#Free-SSL-Certification" class="headerlink" title="Free SSL Certification"></a>Free SSL Certification</h1><h2 id="Goto-sslforfree-and-get-cert-files"><a href="#Goto-sslforfree-and-get-cert-files" class="headerlink" title="Goto sslforfree and get cert files"></a>Goto <a href="https://www.sslforfree.com/" target="_blank" rel="external">sslforfree</a> and get cert files</h2><p>You will get three files ca_bundle.crt, certificate.crt, and private.key</p>
<h2 id="Copy-files-to-etc-nginx-ssl-and-do-followings"><a href="#Copy-files-to-etc-nginx-ssl-and-do-followings" class="headerlink" title="Copy files to /etc/nginx/ssl and do followings"></a>Copy files to /etc/nginx/ssl and do followings</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">mv private.key nginx.key</div><div class="line"><span class="comment">#</span></div><div class="line">cat certificate.crt ca_bundle.crt &gt;&gt; nginx.crt</div><div class="line">vim nginx.crt</div><div class="line"><span class="comment"># change -----BEGIN-----END------ to</span></div><div class="line"><span class="comment"># -----BEGIN--------</span></div><div class="line"><span class="comment"># ----END--------</span></div><div class="line">service nginx restart</div></pre></td></tr></table></figure>
<h2 id="This-free-SSL-Certification-will-expire-after-90-days-so-you-will-have-to-go-to-sslforfree-to-get-new-Certification-before-expired"><a href="#This-free-SSL-Certification-will-expire-after-90-days-so-you-will-have-to-go-to-sslforfree-to-get-new-Certification-before-expired" class="headerlink" title="This free SSL Certification will expire after 90 days, so you will have to go to sslforfree to get new Certification before expired"></a>This free SSL Certification will expire after 90 days, so you will have to go to sslforfree to get new Certification before expired</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Nginx With Node And Https config example&lt;br&gt;
    
    </summary>
    
      <category term="web" scheme="http://cwza.github.io/my_blog/categories/web/"/>
    
    
      <category term="https" scheme="http://cwza.github.io/my_blog/tags/https/"/>
    
      <category term="ssl" scheme="http://cwza.github.io/my_blog/tags/ssl/"/>
    
      <category term="nodejs" scheme="http://cwza.github.io/my_blog/tags/nodejs/"/>
    
      <category term="javascript" scheme="http://cwza.github.io/my_blog/tags/javascript/"/>
    
      <category term="web" scheme="http://cwza.github.io/my_blog/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>Deploy react app to github page</title>
    <link href="http://cwza.github.io/my_blog/2017/01/19/Deploy-react-app-to-github-page/"/>
    <id>http://cwza.github.io/my_blog/2017/01/19/Deploy-react-app-to-github-page/</id>
    <published>2017-01-19T06:48:57.000Z</published>
    <updated>2017-03-10T02:26:35.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Deploy-react-app-by-create-react-app"><a href="#Deploy-react-app-by-create-react-app" class="headerlink" title="Deploy react app by create-react-app"></a>Deploy react app by create-react-app</h2><p>Follow this guide to deploy react app to github pages.<br><a href="https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/template/README.md#github-pages" target="_blank" rel="external">React Create App Readme</a></p>
<h2 id="Do-something-to-let-github-pages-OK-with-SPA"><a href="#Do-something-to-let-github-pages-OK-with-SPA" class="headerlink" title="Do something to let github pages OK with SPA"></a>Do something to let github pages OK with SPA</h2><p>Github pages does not support SPA routings now, so you have to do followings:<br>Follow this guide to make SPA OK with github pages<br><a href="https://github.com/rafrex/spa-github-pages" target="_blank" rel="external">spa github pages</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Deploy-react-app-by-create-react-app&quot;&gt;&lt;a href=&quot;#Deploy-react-app-by-create-react-app&quot; class=&quot;headerlink&quot; title=&quot;Deploy react app by 
    
    </summary>
    
      <category term="javascript" scheme="http://cwza.github.io/my_blog/categories/javascript/"/>
    
    
      <category term="github" scheme="http://cwza.github.io/my_blog/tags/github/"/>
    
      <category term="javascript" scheme="http://cwza.github.io/my_blog/tags/javascript/"/>
    
      <category term="react" scheme="http://cwza.github.io/my_blog/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>Higher Order Component</title>
    <link href="http://cwza.github.io/my_blog/2017/01/19/Higher-Order-Component/"/>
    <id>http://cwza.github.io/my_blog/2017/01/19/Higher-Order-Component/</id>
    <published>2017-01-19T06:48:57.000Z</published>
    <updated>2017-03-10T02:26:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>A Simple Higher Order Component example</p>
<h2 id="Simple-example"><a href="#Simple-example" class="headerlink" title="Simple example"></a>Simple example</h2><p>For loading spinner with different Component<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// HOC declaration</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">withLoadingSpinner</span>(<span class="params">Component</span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> <span class="title">EnhancedComponent</span>(<span class="params">&#123; isLoading, ...props &#125;</span>) </span>&#123;</div><div class="line">    <span class="keyword">if</span> (!isLoading) &#123;</div><div class="line">      <span class="keyword">return</span> &lt;Component &#123; ...props &#125; /&gt;;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    return &lt;LoadingSpinner /&gt;;</div><div class="line">  &#125;;</div><div class="line">&#125;</div><div class="line"></div><div class="line">// Usage</div><div class="line"></div><div class="line">const ListItemsWithLoadingIndicator = withLoadingSpinner(ListItems);</div><div class="line"></div><div class="line">&lt;ListItemsWithLoadingIndicator</div><div class="line">  isLoading=&#123;props.isLoading&#125;</div><div class="line">  list=&#123;props.list&#125;</div><div class="line">/&gt;</div></pre></td></tr></table></figure></p>
<h1 id="Recompose"><a href="#Recompose" class="headerlink" title="Recompose"></a>Recompose</h1><p><a href="https://github.com/rafrex/spa-github-pages" target="_blank" rel="external">https://github.com/rafrex/spa-github-pages</a><br>A React Library for HOC</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;A Simple Higher Order Component example&lt;/p&gt;
&lt;h2 id=&quot;Simple-example&quot;&gt;&lt;a href=&quot;#Simple-example&quot; class=&quot;headerlink&quot; title=&quot;Simple example&quot;&gt;&lt;
    
    </summary>
    
      <category term="javascript" scheme="http://cwza.github.io/my_blog/categories/javascript/"/>
    
    
      <category term="javascript" scheme="http://cwza.github.io/my_blog/tags/javascript/"/>
    
      <category term="react" scheme="http://cwza.github.io/my_blog/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>微軟提供免費windows-VM</title>
    <link href="http://cwza.github.io/my_blog/2016/12/08/%E5%BE%AE%E8%BB%9F%E6%8F%90%E4%BE%9B%E5%85%8D%E8%B2%BBwindows-VM/"/>
    <id>http://cwza.github.io/my_blog/2016/12/08/微軟提供免費windows-VM/</id>
    <published>2016-12-08T05:55:57.000Z</published>
    <updated>2017-03-10T02:26:35.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/" target="_blank" rel="external">https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/</a></p>
<p>90天之後再輸入slmgr -rearm重新取得授權</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://developer.microsoft.com/
    
    </summary>
    
      <category term="windows" scheme="http://cwza.github.io/my_blog/categories/windows/"/>
    
    
      <category term="linux" scheme="http://cwza.github.io/my_blog/tags/linux/"/>
    
      <category term="windows" scheme="http://cwza.github.io/my_blog/tags/windows/"/>
    
      <category term="mac" scheme="http://cwza.github.io/my_blog/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>Docker筆記</title>
    <link href="http://cwza.github.io/my_blog/2016/11/21/Docker%E7%AD%86%E8%A8%98/"/>
    <id>http://cwza.github.io/my_blog/2016/11/21/Docker筆記/</id>
    <published>2016-11-21T06:31:57.000Z</published>
    <updated>2017-03-10T02:26:35.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc -->
<p>Docker is the world’s leading software containerization platform<br><a href="https://www.docker.com/" target="_blank" rel="external">Docker Official Site</a><br><a href="https://hub.docker.com/" target="_blank" rel="external">Docker Hub: search images from this site</a></p>
<a id="more"></a>
<h1 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h1><p>Go to Official Site and click download.</p>
<h1 id="Uninstall"><a href="#Uninstall" class="headerlink" title="Uninstall"></a>Uninstall</h1><h2 id="Uninstall-from-GUI"><a href="#Uninstall-from-GUI" class="headerlink" title="Uninstall from GUI"></a>Uninstall from GUI</h2><p>Choose  –&gt; Preferences from the menu bar, then click Uninstall / Reset on the Preferences dialog.</p>
<h2 id="Uninstall-from-command"><a href="#Uninstall-from-command" class="headerlink" title="Uninstall from command"></a>Uninstall from command</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ /Applications/Docker.app/Contents/MacOS/Docker --uninstall</div><div class="line">Docker is running, exiting...</div><div class="line">Docker uninstalled successfully. You can move the Docker application to the trash.</div></pre></td></tr></table></figure>
<h1 id="Command"><a href="#Command" class="headerlink" title="Command"></a>Command</h1><h2 id="Docker-run"><a href="#Docker-run" class="headerlink" title="Docker run"></a>Docker run</h2><ul>
<li>-d #run in background(demen)</li>
<li>-p 80:5000 #map host 80 port to container 5000 port</li>
<li>-t -i #execute interactive terminal</li>
<li>–name <container name=""></container></li>
</ul>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">docker run &lt;userID&gt;/&lt;imageName&gt; &lt;<span class="built_in">command</span>&gt; &lt;<span class="built_in">command</span> parameter&gt;</div><div class="line">docker run <span class="_">-d</span> -p 80:5000 training/webapp python app.py <span class="comment"># -p 80:5000 to map container 5000 port to host 80 post, -d to run in background</span></div><div class="line">docker run -t -i ubuntu:14.04 /bin/bash <span class="comment"># run interactive bash</span></div><div class="line">docker run <span class="_">-d</span> -P --name web training/webapp python app.py <span class="comment"># give container a name</span></div></pre></td></tr></table></figure>
<h2 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">docker pull &lt;image&gt; <span class="comment"># pull image</span></div><div class="line">docker inspect &lt;container ID&gt; <span class="comment"># see the container specific info</span></div><div class="line">docker ps <span class="comment"># list current running container</span></div><div class="line">docker ps <span class="_">-a</span> <span class="comment"># list all container</span></div><div class="line">docker stop &lt;container name&gt; <span class="comment"># stop container</span></div><div class="line">docker rm <span class="_">-f</span> &lt;container name&gt;|&lt;container id&gt; <span class="comment"># remove container</span></div><div class="line">docker images <span class="comment"># list all images</span></div><div class="line">docker rmi &lt;imageID&gt;|&lt;imageName&gt; <span class="comment"># remove image</span></div><div class="line">docker build -t &lt;userID&gt;/&lt;imageName&gt; ./ <span class="comment"># build image according to Dockfile</span></div><div class="line">docker tag &lt;imageID&gt; &lt;userID&gt;/&lt;imageName&gt;:latest</div><div class="line">docker logs <span class="_">-f</span> &lt;container ID&gt; <span class="comment"># print stdout of container</span></div><div class="line"></div><div class="line">docker login</div><div class="line">docker push &lt;userID&gt;/&lt;imageName&gt;</div></pre></td></tr></table></figure>
<h1 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># an easy example</span></div><div class="line">FROM docker/whalesay:latest <span class="comment"># use other image as base</span></div><div class="line">RUN apt-get -y update &amp;&amp; apt-get install -y fortunes <span class="comment"># run init command</span></div><div class="line">ENV POSTGRES_USER faceblock</div><div class="line">CMD /usr/games/fortune <span class="_">-a</span> | cowsay</div></pre></td></tr></table></figure>
<h1 id="Container-Link"><a href="#Container-Link" class="headerlink" title="Container Link"></a>Container Link</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">docker run <span class="_">-d</span> --name db training/postgres <span class="comment"># creates a container called db, which contains a PostgreSQL database.</span></div><div class="line">docker run <span class="_">-d</span> -P --name web --link db:db training/webapp python app.py <span class="comment"># create a web container and link it with db container</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;!-- toc --&gt;
&lt;p&gt;Docker is the world’s leading software containerization platform&lt;br&gt;&lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker Official Site&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://hub.docker.com/&quot;&gt;Docker Hub: search images from this site&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="computer-science" scheme="http://cwza.github.io/my_blog/categories/computer-science/"/>
    
    
      <category term="linux" scheme="http://cwza.github.io/my_blog/tags/linux/"/>
    
      <category term="windows" scheme="http://cwza.github.io/my_blog/tags/windows/"/>
    
      <category term="mac" scheme="http://cwza.github.io/my_blog/tags/mac/"/>
    
      <category term="docker" scheme="http://cwza.github.io/my_blog/tags/docker/"/>
    
  </entry>
  
</feed>
